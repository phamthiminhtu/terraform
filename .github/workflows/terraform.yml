# This is a basic workflow to help you get started with Actions
name: 'Terraform'

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read

jobs:
    
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: 'read'
      id-token: 'write'

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps: 
      
    - name: Checkout
      uses: 'actions/checkout@v4'
      
    - name: Auth GCP
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      # The limitation of workload_identity_provider is it only accepts the service account created **within** the project
      # which does not allow `terraform apply` for different projects (for different environments)
        # workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
        # service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_TERRAFORM }}'

    - name: Terraform Init (migrate state)
      run: terraform init -reconfigure
      
    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"master"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
